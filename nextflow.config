workDir = "work"

params {
    // tiff to n5 parameters
    input_path = '../../multifish/multifish-testdata/Arivis/A2P_4_LHSTX_R5-stitched.ome.tiff'
    output_path = '../../multifish/multifish-testdata/Arivis/A2P_4_LHSTX_R5-stitched'
    output_name = 'export.n5'
    blocksize = '512,512,128'
    scale_subpath = 's0'
    tiff_to_n5_cpus = 1
    tiff_to_n5_memgb = 3
    z_scale = 0.42
    dask_status_port_binding = '-p 8787:8787'
    dask_work_dir = "${workDir}/dask"
    dask_config = './dask_config.yml'
    dask_workers = 1
    dask_required_workers = 1
    dask_worker_cpus = 1
    dask_worker_memgb = 19

    runtime_opts = ''
}

process {
    withName: ".*:DASK_CLUSTER:.*" {
        ext.container = 'quay.io/bioimagetools/n5tools:1.0-dask2023.10.1-py11'
    }

    withName:"..*:DASK_STARTMANAGER" {
        containerOptions = "${params.dask_status_port_binding}"
    }

    withName: ".*:DASK_TERMINATE.*" {
        ext.container = 'quay.io/bioimagetools/n5tools:1.0-dask2023.10.1-py11'
    }

    withName: OMETIFF_TO_N5 {
        ext {
            container = 'quay.io/bioimagetools/n5tools:1.0-dask2023.10.1-py11'
            args = [
                "--z-scale ${params.z_scale}",
                "-c ${params.blocksize}",
            ].join(' ')
        }
    }
}

profiles {

    standard {
        docker.enabled = true
        singularity.enabled = false
    }

    docker {
        docker.enabled = true
        singularity.enabled = false
    }

}


executor {
    queueSize = 1000
    pollInterval = '2 sec'
}

docker {
    temp = "auto"
    runOptions = "-v $PWD:$PWD ${params.runtime_opts}"
}

singularity {
    autoMounts = true
    cacheDir = "$HOME/.singularity_cache"
    runOptions = "-B $PWD ${params.runtime_opts}"
}
